// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: api/plan/v1/plan.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Company   uint64     `protobuf:"varint,2,opt,name=company,proto3" json:"company,omitempty"`
	CreatedAt int64      `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64      `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name      string     `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Image     uint64     `protobuf:"varint,6,opt,name=image,proto3" json:"image,omitempty"`
	Type      uint64     `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Labels    []*KeyVal  `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`
	Describe  string     `protobuf:"bytes,9,opt,name=describe,proto3" json:"describe,omitempty"`
	Resource  *Resource  `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	Parameter *Parameter `protobuf:"bytes,11,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Scenes    []*Scene   `protobuf:"bytes,12,rep,name=scenes,proto3" json:"scenes,omitempty"`
	Lock      uint32     `protobuf:"varint,13,opt,name=lock,proto3" json:"lock,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{0}
}

func (x *Plan) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Plan) GetCompany() uint64 {
	if x != nil {
		return x.Company
	}
	return 0
}

func (x *Plan) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Plan) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Plan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plan) GetImage() uint64 {
	if x != nil {
		return x.Image
	}
	return 0
}

func (x *Plan) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Plan) GetLabels() []*KeyVal {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Plan) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Plan) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Plan) GetParameter() *Parameter {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *Plan) GetScenes() []*Scene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *Plan) GetLock() uint32 {
	if x != nil {
		return x.Lock
	}
	return 0
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu            uint64           `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory         uint64           `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	GpuNumber      uint64           `protobuf:"varint,3,opt,name=gpu_number,json=gpuNumber,proto3" json:"gpu_number,omitempty"`
	GpuType        string           `protobuf:"bytes,4,opt,name=gpu_type,json=gpuType,proto3" json:"gpu_type,omitempty"`
	Ports          []*Port          `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty"`
	ContainerPorts []*ContainerPort `protobuf:"bytes,6,rep,name=container_ports,json=containerPorts,proto3" json:"container_ports,omitempty"`
	IsAuth         bool             `protobuf:"varint,7,opt,name=is_auth,json=isAuth,proto3" json:"is_auth,omitempty"`
	Volumes        []*Volume        `protobuf:"bytes,8,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Resource) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Resource) GetGpuNumber() uint64 {
	if x != nil {
		return x.GpuNumber
	}
	return 0
}

func (x *Resource) GetGpuType() string {
	if x != nil {
		return x.GpuType
	}
	return ""
}

func (x *Resource) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Resource) GetContainerPorts() []*ContainerPort {
	if x != nil {
		return x.ContainerPorts
	}
	return nil
}

func (x *Resource) GetIsAuth() bool {
	if x != nil {
		return x.IsAuth
	}
	return false
}

func (x *Resource) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envs []*KeyVal `protobuf:"bytes,1,rep,name=envs,proto3" json:"envs,omitempty"`
	Args []string  `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{2}
}

func (x *Parameter) GetEnvs() []*KeyVal {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Parameter) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type KeyVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KeyVal) Reset() {
	*x = KeyVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyVal) ProtoMessage() {}

func (x *KeyVal) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyVal.ProtoReflect.Descriptor instead.
func (*KeyVal) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{3}
}

func (x *KeyVal) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyVal) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Pod  string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{4}
}

func (x *Port) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Port) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

type ContainerPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *ContainerPort) Reset() {
	*x = ContainerPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPort) ProtoMessage() {}

func (x *ContainerPort) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPort.ProtoReflect.Descriptor instead.
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerPort) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ContainerPort) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Mount string `protobuf:"bytes,2,opt,name=mount,proto3" json:"mount,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{6}
}

func (x *Volume) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Volume) GetMount() string {
	if x != nil {
		return x.Mount
	}
	return ""
}

type Scene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UniqueCode uint64 `protobuf:"varint,3,opt,name=unique_code,json=uniqueCode,proto3" json:"unique_code,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Describe   string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *Scene) Reset() {
	*x = Scene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene) ProtoMessage() {}

func (x *Scene) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene.ProtoReflect.Descriptor instead.
func (*Scene) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{7}
}

func (x *Scene) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Scene) GetUniqueCode() uint64 {
	if x != nil {
		return x.UniqueCode
	}
	return 0
}

func (x *Scene) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scene) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type InitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanType   []*PlanType   `protobuf:"bytes,1,rep,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	GpuType    []*GpuType    `protobuf:"bytes,2,rep,name=gpu_type,json=gpuType,proto3" json:"gpu_type,omitempty"`
	VolumeType []*VolumeType `protobuf:"bytes,3,rep,name=volume_type,json=volumeType,proto3" json:"volume_type,omitempty"`
}

func (x *InitData) Reset() {
	*x = InitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitData) ProtoMessage() {}

func (x *InitData) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitData.ProtoReflect.Descriptor instead.
func (*InitData) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{8}
}

func (x *InitData) GetPlanType() []*PlanType {
	if x != nil {
		return x.PlanType
	}
	return nil
}

func (x *InitData) GetGpuType() []*GpuType {
	if x != nil {
		return x.GpuType
	}
	return nil
}

func (x *InitData) GetVolumeType() []*VolumeType {
	if x != nil {
		return x.VolumeType
	}
	return nil
}

type PlanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *PlanType) Reset() {
	*x = PlanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanType) ProtoMessage() {}

func (x *PlanType) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanType.ProtoReflect.Descriptor instead.
func (*PlanType) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{9}
}

func (x *PlanType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlanType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlanType) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type GpuType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GpuType) Reset() {
	*x = GpuType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuType) ProtoMessage() {}

func (x *GpuType) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuType.ProtoReflect.Descriptor instead.
func (*GpuType) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{10}
}

func (x *GpuType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GpuType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VolumeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *VolumeType) Reset() {
	*x = VolumeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeType) ProtoMessage() {}

func (x *VolumeType) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeType.ProtoReflect.Descriptor instead.
func (*VolumeType) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{11}
}

func (x *VolumeType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VolumeType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VolumeType) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type CreatePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CreatePlanRequest) Reset() {
	*x = CreatePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanRequest) ProtoMessage() {}

func (x *CreatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanRequest.ProtoReflect.Descriptor instead.
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePlanRequest) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CreatePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePlanResponse) Reset() {
	*x = CreatePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanResponse) ProtoMessage() {}

func (x *CreatePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanResponse.ProtoReflect.Descriptor instead.
func (*CreatePlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{13}
}

type DeletePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePlanRequest) Reset() {
	*x = DeletePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanRequest) ProtoMessage() {}

func (x *DeletePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanRequest.ProtoReflect.Descriptor instead.
func (*DeletePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePlanRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePlanResponse) Reset() {
	*x = DeletePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanResponse) ProtoMessage() {}

func (x *DeletePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanResponse.ProtoReflect.Descriptor instead.
func (*DeletePlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{15}
}

type UpdatePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *UpdatePlanRequest) Reset() {
	*x = UpdatePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanRequest) ProtoMessage() {}

func (x *UpdatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{16}
}

func (x *UpdatePlanRequest) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdatePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePlanResponse) Reset() {
	*x = UpdatePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanResponse) ProtoMessage() {}

func (x *UpdatePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{17}
}

type ListPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPlanRequest) Reset() {
	*x = ListPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanRequest) ProtoMessage() {}

func (x *ListPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanRequest.ProtoReflect.Descriptor instead.
func (*ListPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{18}
}

type ListPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *ListPlanResponse) Reset() {
	*x = ListPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanResponse) ProtoMessage() {}

func (x *ListPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanResponse.ProtoReflect.Descriptor instead.
func (*ListPlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{19}
}

func (x *ListPlanResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type GetPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlanRequest) Reset() {
	*x = GetPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanRequest) ProtoMessage() {}

func (x *GetPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanRequest.ProtoReflect.Descriptor instead.
func (*GetPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{20}
}

func (x *GetPlanRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *GetPlanResponse) Reset() {
	*x = GetPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanResponse) ProtoMessage() {}

func (x *GetPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanResponse.ProtoReflect.Descriptor instead.
func (*GetPlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{21}
}

func (x *GetPlanResponse) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type SelectPlanByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size    uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SelectPlanByNameRequest) Reset() {
	*x = SelectPlanByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPlanByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPlanByNameRequest) ProtoMessage() {}

func (x *SelectPlanByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPlanByNameRequest.ProtoReflect.Descriptor instead.
func (*SelectPlanByNameRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{22}
}

func (x *SelectPlanByNameRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SelectPlanByNameRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SelectPlanByNameRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SelectPlanByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size  uint32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Page  uint32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Total uint32  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Plans []*Plan `protobuf:"bytes,5,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *SelectPlanByNameResponse) Reset() {
	*x = SelectPlanByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPlanByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPlanByNameResponse) ProtoMessage() {}

func (x *SelectPlanByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPlanByNameResponse.ProtoReflect.Descriptor instead.
func (*SelectPlanByNameResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{23}
}

func (x *SelectPlanByNameResponse) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SelectPlanByNameResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SelectPlanByNameResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SelectPlanByNameResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SelectPlanByNameResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type SelectPlanByCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company uint64 `protobuf:"varint,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *SelectPlanByCompanyRequest) Reset() {
	*x = SelectPlanByCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPlanByCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPlanByCompanyRequest) ProtoMessage() {}

func (x *SelectPlanByCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPlanByCompanyRequest.ProtoReflect.Descriptor instead.
func (*SelectPlanByCompanyRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{24}
}

func (x *SelectPlanByCompanyRequest) GetCompany() uint64 {
	if x != nil {
		return x.Company
	}
	return 0
}

type SelectPlanByCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *SelectPlanByCompanyResponse) Reset() {
	*x = SelectPlanByCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPlanByCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPlanByCompanyResponse) ProtoMessage() {}

func (x *SelectPlanByCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPlanByCompanyResponse.ProtoReflect.Descriptor instead.
func (*SelectPlanByCompanyResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{25}
}

func (x *SelectPlanByCompanyResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type SelectAlgoPlanByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []uint64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Type uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SelectAlgoPlanByIdRequest) Reset() {
	*x = SelectAlgoPlanByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAlgoPlanByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAlgoPlanByIdRequest) ProtoMessage() {}

func (x *SelectAlgoPlanByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAlgoPlanByIdRequest.ProtoReflect.Descriptor instead.
func (*SelectAlgoPlanByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{26}
}

func (x *SelectAlgoPlanByIdRequest) GetId() []uint64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SelectAlgoPlanByIdRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type SelectAlgoPlanByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *SelectAlgoPlanByIdResponse) Reset() {
	*x = SelectAlgoPlanByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAlgoPlanByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAlgoPlanByIdResponse) ProtoMessage() {}

func (x *SelectAlgoPlanByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAlgoPlanByIdResponse.ProtoReflect.Descriptor instead.
func (*SelectAlgoPlanByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{27}
}

func (x *SelectAlgoPlanByIdResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type GetInitDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInitDataRequest) Reset() {
	*x = GetInitDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInitDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInitDataRequest) ProtoMessage() {}

func (x *GetInitDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInitDataRequest.ProtoReflect.Descriptor instead.
func (*GetInitDataRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{28}
}

type GetInitDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitData *InitData `protobuf:"bytes,1,opt,name=init_data,json=initData,proto3" json:"init_data,omitempty"`
}

func (x *GetInitDataResponse) Reset() {
	*x = GetInitDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInitDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInitDataResponse) ProtoMessage() {}

func (x *GetInitDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInitDataResponse.ProtoReflect.Descriptor instead.
func (*GetInitDataResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{29}
}

func (x *GetInitDataResponse) GetInitData() *InitData {
	if x != nil {
		return x.InitData
	}
	return nil
}

type LockAndUnlockPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LockAndUnlockPlanRequest) Reset() {
	*x = LockAndUnlockPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockAndUnlockPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAndUnlockPlanRequest) ProtoMessage() {}

func (x *LockAndUnlockPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAndUnlockPlanRequest.ProtoReflect.Descriptor instead.
func (*LockAndUnlockPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{30}
}

func (x *LockAndUnlockPlanRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LockAndUnlockPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockAndUnlockPlanResponse) Reset() {
	*x = LockAndUnlockPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_plan_v1_plan_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockAndUnlockPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAndUnlockPlanResponse) ProtoMessage() {}

func (x *LockAndUnlockPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_plan_v1_plan_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAndUnlockPlanResponse.ProtoReflect.Descriptor instead.
func (*LockAndUnlockPlanResponse) Descriptor() ([]byte, []int) {
	return file_api_plan_v1_plan_proto_rawDescGZIP(), []int{31}
}

var File_api_plan_v1_plan_proto protoreflect.FileDescriptor

var file_api_plan_v1_plan_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x82,
	0x03, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x8f, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x70,
	0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x67, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x26, 0x0a,
	0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x04,
	0x65, 0x6e, 0x76, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x6f, 0x64, 0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x32, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x05, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x08, 0x67, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x67, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x2d, 0x0a, 0x07, 0x47, 0x70, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x14,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x1a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x3f, 0x0a, 0x1b,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x3f, 0x0a,
	0x19, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e,
	0x0a, 0x1a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x14,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x69, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x4c, 0x6f, 0x63, 0x6b,
	0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x98, 0x0b, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x17, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x17, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x17,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x15, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x67,
	0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4c, 0x6f,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1e, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x12, 0x5a, 0x10,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_plan_v1_plan_proto_rawDescOnce sync.Once
	file_api_plan_v1_plan_proto_rawDescData = file_api_plan_v1_plan_proto_rawDesc
)

func file_api_plan_v1_plan_proto_rawDescGZIP() []byte {
	file_api_plan_v1_plan_proto_rawDescOnce.Do(func() {
		file_api_plan_v1_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_plan_v1_plan_proto_rawDescData)
	})
	return file_api_plan_v1_plan_proto_rawDescData
}

var file_api_plan_v1_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_api_plan_v1_plan_proto_goTypes = []interface{}{
	(*Plan)(nil),                        // 0: plan.Plan
	(*Resource)(nil),                    // 1: plan.Resource
	(*Parameter)(nil),                   // 2: plan.Parameter
	(*KeyVal)(nil),                      // 3: plan.KeyVal
	(*Port)(nil),                        // 4: plan.Port
	(*ContainerPort)(nil),               // 5: plan.ContainerPort
	(*Volume)(nil),                      // 6: plan.Volume
	(*Scene)(nil),                       // 7: plan.Scene
	(*InitData)(nil),                    // 8: plan.InitData
	(*PlanType)(nil),                    // 9: plan.PlanType
	(*GpuType)(nil),                     // 10: plan.GpuType
	(*VolumeType)(nil),                  // 11: plan.VolumeType
	(*CreatePlanRequest)(nil),           // 12: plan.CreatePlanRequest
	(*CreatePlanResponse)(nil),          // 13: plan.CreatePlanResponse
	(*DeletePlanRequest)(nil),           // 14: plan.DeletePlanRequest
	(*DeletePlanResponse)(nil),          // 15: plan.DeletePlanResponse
	(*UpdatePlanRequest)(nil),           // 16: plan.UpdatePlanRequest
	(*UpdatePlanResponse)(nil),          // 17: plan.UpdatePlanResponse
	(*ListPlanRequest)(nil),             // 18: plan.ListPlanRequest
	(*ListPlanResponse)(nil),            // 19: plan.ListPlanResponse
	(*GetPlanRequest)(nil),              // 20: plan.GetPlanRequest
	(*GetPlanResponse)(nil),             // 21: plan.GetPlanResponse
	(*SelectPlanByNameRequest)(nil),     // 22: plan.SelectPlanByNameRequest
	(*SelectPlanByNameResponse)(nil),    // 23: plan.SelectPlanByNameResponse
	(*SelectPlanByCompanyRequest)(nil),  // 24: plan.SelectPlanByCompanyRequest
	(*SelectPlanByCompanyResponse)(nil), // 25: plan.SelectPlanByCompanyResponse
	(*SelectAlgoPlanByIdRequest)(nil),   // 26: plan.SelectAlgoPlanByIdRequest
	(*SelectAlgoPlanByIdResponse)(nil),  // 27: plan.SelectAlgoPlanByIdResponse
	(*GetInitDataRequest)(nil),          // 28: plan.GetInitDataRequest
	(*GetInitDataResponse)(nil),         // 29: plan.GetInitDataResponse
	(*LockAndUnlockPlanRequest)(nil),    // 30: plan.LockAndUnlockPlanRequest
	(*LockAndUnlockPlanResponse)(nil),   // 31: plan.LockAndUnlockPlanResponse
}
var file_api_plan_v1_plan_proto_depIdxs = []int32{
	3,  // 0: plan.Plan.labels:type_name -> plan.KeyVal
	1,  // 1: plan.Plan.resource:type_name -> plan.Resource
	2,  // 2: plan.Plan.parameter:type_name -> plan.Parameter
	7,  // 3: plan.Plan.scenes:type_name -> plan.Scene
	4,  // 4: plan.Resource.ports:type_name -> plan.Port
	5,  // 5: plan.Resource.container_ports:type_name -> plan.ContainerPort
	6,  // 6: plan.Resource.volumes:type_name -> plan.Volume
	3,  // 7: plan.Parameter.envs:type_name -> plan.KeyVal
	9,  // 8: plan.InitData.plan_type:type_name -> plan.PlanType
	10, // 9: plan.InitData.gpu_type:type_name -> plan.GpuType
	11, // 10: plan.InitData.volume_type:type_name -> plan.VolumeType
	0,  // 11: plan.CreatePlanRequest.plan:type_name -> plan.Plan
	0,  // 12: plan.UpdatePlanRequest.plan:type_name -> plan.Plan
	0,  // 13: plan.ListPlanResponse.plans:type_name -> plan.Plan
	0,  // 14: plan.GetPlanResponse.plan:type_name -> plan.Plan
	0,  // 15: plan.SelectPlanByNameResponse.plans:type_name -> plan.Plan
	0,  // 16: plan.SelectPlanByCompanyResponse.plans:type_name -> plan.Plan
	0,  // 17: plan.SelectAlgoPlanByIdResponse.plans:type_name -> plan.Plan
	8,  // 18: plan.GetInitDataResponse.init_data:type_name -> plan.InitData
	12, // 19: plan.PlanService.AddPlan:input_type -> plan.CreatePlanRequest
	14, // 20: plan.PlanService.DeletePlan:input_type -> plan.DeletePlanRequest
	16, // 21: plan.PlanService.UpdatePlan:input_type -> plan.UpdatePlanRequest
	18, // 22: plan.PlanService.ListPlan:input_type -> plan.ListPlanRequest
	20, // 23: plan.PlanService.GetPlan:input_type -> plan.GetPlanRequest
	22, // 24: plan.PlanService.SelectPlanByName:input_type -> plan.SelectPlanByNameRequest
	24, // 25: plan.PlanService.SelectPlanByCompany:input_type -> plan.SelectPlanByCompanyRequest
	26, // 26: plan.PlanService.SelectAlgoPlanById:input_type -> plan.SelectAlgoPlanByIdRequest
	28, // 27: plan.PlanService.GetInitData:input_type -> plan.GetInitDataRequest
	30, // 28: plan.PlanService.LockPlan:input_type -> plan.LockAndUnlockPlanRequest
	30, // 29: plan.PlanService.UnlockPlan:input_type -> plan.LockAndUnlockPlanRequest
	12, // 30: plan.PlanService.CreatePlanConfirm:input_type -> plan.CreatePlanRequest
	12, // 31: plan.PlanService.CreatePlanCancel:input_type -> plan.CreatePlanRequest
	14, // 32: plan.PlanService.DeletePlanConfirm:input_type -> plan.DeletePlanRequest
	14, // 33: plan.PlanService.DeletePlanCancel:input_type -> plan.DeletePlanRequest
	30, // 34: plan.PlanService.LockPlanConfirm:input_type -> plan.LockAndUnlockPlanRequest
	30, // 35: plan.PlanService.LockPlanCancel:input_type -> plan.LockAndUnlockPlanRequest
	30, // 36: plan.PlanService.UnlockPlanConfirm:input_type -> plan.LockAndUnlockPlanRequest
	30, // 37: plan.PlanService.UnlockPlanCancel:input_type -> plan.LockAndUnlockPlanRequest
	13, // 38: plan.PlanService.AddPlan:output_type -> plan.CreatePlanResponse
	15, // 39: plan.PlanService.DeletePlan:output_type -> plan.DeletePlanResponse
	17, // 40: plan.PlanService.UpdatePlan:output_type -> plan.UpdatePlanResponse
	19, // 41: plan.PlanService.ListPlan:output_type -> plan.ListPlanResponse
	21, // 42: plan.PlanService.GetPlan:output_type -> plan.GetPlanResponse
	23, // 43: plan.PlanService.SelectPlanByName:output_type -> plan.SelectPlanByNameResponse
	25, // 44: plan.PlanService.SelectPlanByCompany:output_type -> plan.SelectPlanByCompanyResponse
	27, // 45: plan.PlanService.SelectAlgoPlanById:output_type -> plan.SelectAlgoPlanByIdResponse
	29, // 46: plan.PlanService.GetInitData:output_type -> plan.GetInitDataResponse
	31, // 47: plan.PlanService.LockPlan:output_type -> plan.LockAndUnlockPlanResponse
	31, // 48: plan.PlanService.UnlockPlan:output_type -> plan.LockAndUnlockPlanResponse
	13, // 49: plan.PlanService.CreatePlanConfirm:output_type -> plan.CreatePlanResponse
	13, // 50: plan.PlanService.CreatePlanCancel:output_type -> plan.CreatePlanResponse
	15, // 51: plan.PlanService.DeletePlanConfirm:output_type -> plan.DeletePlanResponse
	15, // 52: plan.PlanService.DeletePlanCancel:output_type -> plan.DeletePlanResponse
	31, // 53: plan.PlanService.LockPlanConfirm:output_type -> plan.LockAndUnlockPlanResponse
	31, // 54: plan.PlanService.LockPlanCancel:output_type -> plan.LockAndUnlockPlanResponse
	31, // 55: plan.PlanService.UnlockPlanConfirm:output_type -> plan.LockAndUnlockPlanResponse
	31, // 56: plan.PlanService.UnlockPlanCancel:output_type -> plan.LockAndUnlockPlanResponse
	38, // [38:57] is the sub-list for method output_type
	19, // [19:38] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_plan_v1_plan_proto_init() }
func file_api_plan_v1_plan_proto_init() {
	if File_api_plan_v1_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_plan_v1_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPlanByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPlanByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPlanByCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPlanByCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAlgoPlanByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAlgoPlanByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInitDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInitDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockAndUnlockPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_plan_v1_plan_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockAndUnlockPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_plan_v1_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_plan_v1_plan_proto_goTypes,
		DependencyIndexes: file_api_plan_v1_plan_proto_depIdxs,
		MessageInfos:      file_api_plan_v1_plan_proto_msgTypes,
	}.Build()
	File_api_plan_v1_plan_proto = out.File
	file_api_plan_v1_plan_proto_rawDesc = nil
	file_api_plan_v1_plan_proto_goTypes = nil
	file_api_plan_v1_plan_proto_depIdxs = nil
}
